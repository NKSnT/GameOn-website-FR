let emailFailCheck = false;
let firstFailCheck = false;
let lastFailCheck = false;

//fonction qui crée et ajoute le/les element(s) d'erreur en cas de non validation du formulaire.
function addErrorElement(targetID, infoError) {
  const newP = document.createElement("p");
  newP.style.color = "red";
  newP.style.fontSize = "12px";
  newP.style.padding = "0.5vw 0 0 0";
  //newP.style.display = "flex";
  //newP.style.marginBlockEnd="0"
  //newP.style.marginBlockStart="0"
  newP.innerText = infoError;

  const targetElement = document.getElementById(targetID);
  //console.log(newP);
  //console.log(targetElement);
  targetElement.insertAdjacentElement("afterend", newP);

  //targetElement.parentElement.style.display = "flex";
  //targetElement.parentElement.style.justifyContent = "flex-start";
  //targetElement.parentElement.style.flexDirection = "column";
  //targetElement.parentElement.style.height = "100px";
}

// fonction qui permet la validation du formulair
//et l'affichage d'un erreure le cas contraire.
function form_Validate(target, Regex, infoError, errorState) {
  
  if (target.value == "") {
    if (errorState == false) {
      target.style.border = "2px solid red";
      addErrorElement(target.id, infoError);
      target.addEventListener("change", function () {
        //réajuste le visuelle si modification
        var test = target.value;
        if (test != "") {
          target.style.border = "";
          target.nextElementSibling.remove();
          console.log(Object.keys({ errorState })[0]);
          if (emailFailCheck.includes(target.id)) {
            //emailFailCheck = false;
            console.log("var value in the function : " + emailFailCheck)
          } else if (firstFailCheck.includes(target.id)) {
            //firstFailCheck = false;
            console.log("var value in the function : " + emailFailCheck)
          } else if (lastFailCheck.includes(target.id)) {
            //lastFailCheck = false;
            console.log("var value in the function : " + emailFailCheck)
          }
        }
      });
    }
    return false;
  } else if (!Regex.test(target.value)) {
    if (errorState == false) {
    }
    target.style.border = "2px solid red";
    addErrorElement(target.id, infoError);
    target.addEventListener("change", function () {
      //réajuste le visuelle si modification
      var test = target.value;
      if (test != "") {
        target.style.border = "";
        target.nextElementSibling.remove();
      }
    });
    return false;
  } else {
    return true;
  }
}

let form = document.querySelector("form[name='reserve']");

form.onsubmit = function (event) {
  //recupere les donnée , les verifie via la fonction validate, puis les envoi en POST
  event.preventDefault();

  let firstName = document.querySelector("#first");
  let lastName = document.querySelector("#last");
  let email = document.querySelector("#email");
  let birthDate = document.querySelector("#birthdate");
  let timeParticipate = document.querySelector("#quantity");

  //regex library
  const emailReg = new RegExp(
    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/
  );
  const nameReg = new RegExp(/^(.*[a-z]){2,}$/i); // min 2characters
  const dateReg = new RegExp(
    /^(3[01]|[12][0-9]|0?[1-9])(\/|-)(1[0-2]|0?[1-9])\2([0-9]{2})?[0-9]{2}$/
  );
  const numberReg = new RegExp(/^[1-9][0-9]?$|^99$/); // 1 to 99
  //console.log("email : " + email);

  let emailError =
    "Information saisie invalide, veuillez verifier votre Email. ";
  let nameError =
    "Information saisie invalide, veuillez entrer 2 caractère ou plus.";
  let numberError =
    "Information saisie invalide, seul les nombre entre 1 et 99 son accepté.";

  let countError = 0;
  if (!form_Validate(email, emailReg, emailError, { emailFailCheck })) {
    countError = countError + 1;
    console.log("drect var value after validation : " + emailFailCheck);
    emailFailCheck = true;
  }
  if (!form_Validate(firstName, nameReg, nameError, { firstFailCheck })) {
    countError = countError + 1;
    firstFailCheck = true;
  }
  if (!form_Validate(lastName, nameReg, nameError, { lastFailCheck })) {
    countError = countError + 1;
    lastFailCheck = true;
  }
  /*
if(!form_Validate(birthDate, dateReg, infoError)){
  countError = countError+1
}
*/
  if (!form_Validate(timeParticipate, numberReg, numberError)) {
    countError = countError + 1;
  }

  if (countError != 0) {
    console.log("pas Ok")
    alert("votre réservation na pas pu être effectué.");
  } else {
    console.log("Ok")
    alert("Merci! votre réservation a été reçue.");
  }
  console.log("countError : " + countError);
};